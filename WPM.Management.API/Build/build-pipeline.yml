trigger:
- master

pool:
  vmImage: 'windows-latest'

 
steps:

 - task: DotNetCoreCLI@2
   inputs:
     command: 'restore'
     feedsToUse: 'select'
     vstsFeed: 'bb5e0499-651d-49a4-8f54-1a07c573a7e9'

 - task: DotNetCoreCLI@2
   inputs:
    command: 'build'
    projects: '**/*.csproj'

 - script: dotnet tool install -g dotnet-reportgenerator-globaltool
   displayName: 'Install ReportGenerator'


 - task: DotNetCoreCLI@2
   displayName : 'Run Unit Test'
   inputs :
     command : 'test'
    
     arguments : '--no-build --configuration Debug /p:CollectCoverage=true /p:CoverletOutputFormat=Cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResult/Coverage'
     publishTestResults: true
     projects : '**/*.Tests.csproj'

 # - script: reportgenerator -reports:C:\TestResult\Coverage\coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines
 #   displayName: 'Create Code Coverage Report'

 # - task: PublishCodeCoverageResults@1
 #   displayName: 'Publish Code Coverage'
 #   inputs:
 #    codeCoverageTool: 'Cobertura'  # Or 'JaCoCo', 'VisualStudio'
 #    summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
 



 - task: DotNetCoreCLI@2
   inputs:
    command: 'test'
    projects: '**/*.Tests.csproj'

 - task: CopyFiles@2
   inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/WPM.Management.API/bin'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

 - task: PublishBuildArtifacts@1
   inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
  
  
 - script : echo all done
   displayName : 'All done'
    


     